 We continuously make efficiency improvements to our back end to save our customers' time and money when using observe. Some highlights from recent work. A 75-95% reduction in transform costs for resource datasets with semi-structured fields, that means JSON. Incremental streaming implementations of most aggregate functions that includes min, max, average, percentile and count distinct, which are found in many monitor definitions. Streaming aggregation reduces transform costs by large factor where applicable. On top of these two big optimizations, changes to how immaterialized monitor state and schedule monitor execution have led to an overall reduction of 25% in monitor costs across all our customers, with some customers seeing cost reductions of over 60%. And finally, a dramatic reduction of transform tasks queuing thanks to various improvements to our last degree source management. Previously, a bit more than 1 in 100 transform tasks was queued for 60 seconds or more, which was already pretty good, whereas now it is less than 1 in 100,000 tasks. The net defect is fresher datasets and monitors running and firing more accurately than ever before.