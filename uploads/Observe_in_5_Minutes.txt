 On to take just five minutes of your time to tell you a little bit about what observed does and the customer problems we solve. As most of you are aware we live in a digital economy. Whether you're a product company, services companies, or with COVID, a government agency like Education, you're doing everything online. Every company has to become a technology company. Key to delivering a digital product or service is software and we build software differently. We use microservices and we deliver new features every day using continuous delivery. There's never been more change going into production on a daily basis. And when something goes wrong, the customer notices. The stakes are high here because we know that when a consumer has a bad experience online in 76% of cases they don't go back. Now when something does go wrong, the scene resembles a murder mystery movie. The smartest guy in the room trying to figure out the answer to two questions. What happened, which is the easy bit, but why did it happen, which is a nightmare? And it's hard to find out why something happened because the date is fragmented. No one, even the smartest person in the room has access to all of the information. They have to piece it together using their intuition and knowledge, which is not sustainable. But the worst bit is that it costs a lot of money to know nothing about your organization and what's going on in your systems. Legacy vendors charge for volume of data ingested on metric points that preventing you from ingesting the very data you need to troubleshoot your problems. Something has to change. And this is why we created Observe. The current log analytics and metrics monitoring and APM vendors, they're not getting the job done. New problems need a new approach and we firmly believe that observability is that approach. Now when we think about observability, we think about it holistically. We don't just think about cloud infrastructure or database infrastructure. We don't just think about the business applications or the service desk or maybe the CICD infrastructure. We think about everything. Why? Because everything is related. When the customer has an issue with the application, they're going to raise a service desk ticket. The issue may be in the database or it could be in the underlying Kubernetes infrastructure or it could be with the AWS infrastructure. You don't know. So you have to have this wide angle field of vision. We wanted to take a different approach with Observe. We didn't want to become a tools company. The customer has enough tools. We fundamentally believe that observability is a data problem. An Observe is a data company. Now key to everything here is us being able to ingest all of your data. We don't subscribe to this three pillars of observability view, logs, metrics and traces. We treat everything as an event and we start all data together. What we do subscribe to is cloud storage economics. We think you should be able to ingest as much data as you want and keep it for as long as you want. Once we've ingested the data, we shape the data. Why is this important? Well, we didn't want to give users a search box and have you go looking for breadcrumbs. We curate the data and turn it into users and sessions and shopping carts and pods and containers. It provides a much more logical starting point. Most importantly, after we've shaped the data, we relate the data. Behind the scenes, we create a graph of connected data sets and we don't do it using tags. Tags are a nightmare. It's not a sustainable way to join data that become un maintainable. We think that by connecting data sets, the user can navigate data more quickly and bring all of the context they need to bear on the problem that they're looking at. And finally, we keep track of time. Modern systems are a femoral. Different things run in different places at different times. The question maybe isn't what happened. It's what happened at 2 a.m. last Tuesday when the user received an error on the website. Observe keeps track of state of all the components so you can wind back the system to any point in time. You may be thinking at this point, well, observe, is this some kind of data tool for data scientists? The answers no. We built the interface for the SRE team and we realize that the SRE team may have junior members that are on call and are trying to triage problems in the middle of the night. So you wanted an intuitive visual dashboard approach to allow those users to use the product. But we also recognize that when you're investigating an issue, some of these issues are complex and hairy. You've got to get in and deal with the data directly. So whether you're a junior member of the team or a seasoned member of the team, you can work with Observe. Taking a step back, what Observe does is it allows you to find problems and order of magnitude faster. And we do this because we present things at a familiar and we allow you to quickly navigate to additional contextual information, which will help you solve the problem. The example on the screen shows a navigation from help test tickets right the way through logs, right the way through to even Jenkins builds. And the best news is that we have usage-based pricing. We separate storage and compute. So you can ingest data at the cost of S3 and you only pay when you use it. Getting started with Observe is simple. In fact, you can do what you're doing today. But as you drive towards this goal of a fully observable environment, Observe will allow you to keep on ingesting the different data types that you think you need to find the problems that you see. Thank you very much and thanks for listening today.