 We have tens of billions of dollars spent on machine analytics, but the problem is that the systems that were built were all built decades ago, you know, a decade or more ago. And they were built for a different world. And this was one of those things we had butterflies in our stomach. We weren't sure if we could actually build this thing. You talked to customers and they would tell you, you know, yeah, we have an APM tool, we have a log management tool, we have an alerting tool, maybe in some cases they have three or four of these things. And nevertheless, they still had no idea what was going on in their environment. So one of the common problems with lots of these tools is that they give you no structure. There's nothing to ask about. There's just a giant soup of data. But what people really want to do is they want to ask questions about things. So things can be users, they can be sessions, they can be hosts. There are lots and lots of things in any business data. That's what you want to ask questions about. So you open up one of these products and as a new user, all you see in front of you is like a blank search bar. And it's sort of like the system telling you, it's like you figured out. These dashboards are all pointless. They're utterly useless. Two weeks into using them, users realize that the dashboards aren't telling them anything they need to know. They're generic and pointless. You know, universally, log management was seen as a very expensive proposition. You pay an awful lot of money just for the privilege of storing your log data. People just keep glomming tags onto data and you get this mass of tag soup. It's a complete mess. We wanted to provide an experience that was as flexible and general as a log management tool, but had strongly opinionated workflows like an APM tool. One of the things I wanted to solve is sort of like, let's bring it all together. Let's have one system that does it all and not a Frankenstein's monster where we're globbing different systems together. Observe stores all of the raw data with all of the timestamps when we saw it and also optionally timestamps that you put in when you saw the data. And based on this, we build up a model of what happened over time, what happened when to whom. It's a little bit like a crime scene investigation, right? At the end of the day, like, I don't really care about the logs per se. I don't really care about the metrics per se. What I care about is the user or the service or the thing that this telemetry tells a story about. Observe needs to figure out how to magically turn that raw stream of event data, which we call observations into these higher level resources and historic state of these resources. Now Observe actually has resources. We can actually do some really magical things with them. So one of these things is landing pages. So we can look at a resource. We can look at all of the data in a resource and we can reflect it and build dashboards automatically in a landing page. Time is really front and center if you're dealing with machine-borne data. The first technical challenge was, well, we have this theoretical underpinning of the time dimension and the relational dimension. How the hell are we going to build something that users can understand on top of this? Algebra that there's only, you know, like five academic papers on. The challenge with time is that users, it's not just good enough to tell users what is the state of the system right now. People don't just want to see the latest state. They need to see the history of their system so they can ask questions such as, you know, what was the state last night when things went down? What was happening? It's not actually only solving this or two-dimensional relations and times. It's figuring out how do we present this to me, the user, in a way that I can easily use and get on with my life and solve the problem, get a very short mean time to clue rather than getting lost in all the technical details. So one of the things that resources and these connection between resources give us is the ability to produce of these magic moments in the UI. So one of these is the portal feature that we implemented a few months ago. This allows you to start with one resource and get to another resource without knowing how the magic happens. From an end user perspective, it's phenomenal. Getting those kinds of insights out of data that you already have but have underutilized, that's an enormous potential of observe that once your systems put their data into observe, yes, this SRE is going to be the first person who uses Observer to figure out what's going on and how can we get better up time and how can we fast deliver our features. But the user product managers and the marketing team are going to be fast followers and build totally different applications that we haven't seen yet on top of our platform. When you do things that are really profound, if you knew how hard they were really at the start, you wouldn't do them. And so we're now proud to show the world something that they're going to be shocked by.