 Hi, my name is Chris Hain. I'm at the CTO's office at F5. I was thinking about a troubleshooting flow that we'd done the other day through an observed product and how simple that was compared to the exact same flow at a previous company. That flow was much more painful and I'd like to tell you a little bit about how that used to work. With Observe, you know, click, click, click, and I'm there with this prior system, it was, you know, an alert hits my phone. I know that the alert data comes from a system. I know the underlying data for that system comes from a time series database. I need to know how to query that time series database for the set of data that I want. I need to know where my, you know, dashboarding infrastructure lives and where all my different dashboards are that might relate to that alert. I need to know where the logging infrastructure is. I kind of narrowed the problem down to a load balancer being the issue and I wanted to look at the logs for that. I need to know where the load balancer logs live, which system that was. It's not in the Kubernetes infrastructure of logs. It's not in the application infrastructure logs. Those are entirely different systems at entirely different URLs and entirely different pieces of software in some cases. Knowing that, knowing how to query it, what I'm looking for and how to get it, it's a lot of things that I have to keep in my brain and kind of know that really just don't have a lot of portability and use anywhere in any other context in that specific job. As soon as I left that role, you know, all of that is just kind of useless information. Observe does a much better job. It's much easier to navigate around. You've got the single pane of glass. You've got these resources that are interrelated and it's just a better way of operating. So that's my story.