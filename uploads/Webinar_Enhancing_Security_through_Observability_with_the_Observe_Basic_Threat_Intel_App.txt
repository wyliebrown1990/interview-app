 Hello and welcome to the Observability Trends webinar series. I'm Grant Swanson, your host, and today we will explore the topic of enhancing security through observability with the Observe Basic Threat Intel app. We'll kick off with a short presentation, followed by a live product demo of our observability cloud. After the product demo, we'll jump into questions and answers. Feel free to type your questions into the questions window at any time during the webinar. The State of Security Observability 2023 report was released yesterday. The inaugural report in collaboration with Site Research surveyed 500 security decision makers and practitioners to understand their current approach to security and how it intersects with the observability. Everyone on the webinar will receive a copy of the report and a link to the webinar recording. Now I'd like to introduce our guest speaker, Principal Solutions Engineer Keith Buzzwell. Welcome, Keith. Hey, thanks, Grant. Really appreciate it. Excited to be here. Yeah, I'd like to just go ahead and dive right in. So enhancing security through observability with the Observe Basic Threat Intel app. So what really we're going to be discussing today is a little bit about the Observe platform and then also how I'm leveraging our Threat Intel app just to really to kind of enhance my security posture inside of my environment. So getting started is the Observe approach. What are we doing differently here inside of the platform? So we've adopted the concept of a data lake for our environment and what we've done is we partnered with Snowflake to deliver that. So a lot of benefits that wrap around that. But one of the key ones being is that we can ingest incredible amount of data and make it very cost effective. This is different from some of the platforms I've used in the past just because that licensing from the ingest perspective all the way to the compute perspective were very tied together and made things very expensive. But Observe has been able to decouple storage from compute and at current rates right now and I think on average by us loading data into Snowflake tables, we're accomplishing right around the ballpark if I was to average out metrics and logs and trace it to kind of cross the board right around 10X compression by loading it into Snowflake tables. So if you think about basically every 10 terabytes that you bring inside of our platform compressed down to one terabyte at current S3 costs, we're looking at I think it's about $23 a month for every one terabyte that you want to store per month. So you figure about every 10 terabytes compressing down to one, you be looking about $23 to store the data for a month. So very cheap, very cost effective to be able to bring in just an extraordinary amount of data, have it all at your fingertips and being very cost effective. Now the next thing that we do is that we reach inside of this data lake and start splitting out things that we call data sets. Now these are the things that really you want to interact with on a day to day basis. And so what I mean by that is if you come take a look over here for like AWS for example, as that data comes inside of there, you're going to have things like VPC flow logs and cloud trail and cloud watch and all the things AWS inside of there. But oftentimes you're just looking maybe very specifically at cloud trail or maybe cloud watch for example, you don't really want to interact with that huge data stream that's since you know coming inside of the data lake. So what we do is we split off and make these data sets. So as you see these data sets, what I'll do is I'll maybe create something very specific to specific just for the Lambda functions or just the cloud watch events that are inside of there, maybe cloud trail. And then that way you can just go query that data very similar if you're bringing in like your Kubernetes clusters as well. They could be hosted in AWS or maybe they're hosted somewhere completely differently. Really doesn't matter at the end of the day. But as we start building now, we're going to build a pod data set. As a matter of fact, it goes downstream from there as well. And we start creating container data sets, container logs all the way down to maybe if you're bringing in business level information like customer data that's feeding inside of there as well. And what becomes very powerful about this is not only the fact that we're creating these data sets, which is really nice. And you can kind of think that these as just the data sources of things that maybe you've leveraged in the past and other platforms. But the other thing that we're doing is we're creating a data graph on top of there as well. And what I mean by that is as you start interacting with container logs, what container logs are very, there's a very close relationship to the pods that they live inside of. And the pods live inside of a cluster. And then maybe the cluster might be running on EC2s, etc. So all of those have a relation inside of there. So what we've done is that we've really kind of paired all those things up. So if there's some of those relational fields like maybe a cluster ID or some type of a link or tag that you have inside the environment, we can take that information and we can create key value pairs inside of our environment to say, okay, at any point, if you're investigating something maybe like container logs and I start seeing errors inside of my applications, I could stay right where I'm at and I could go ask the pod data, be like, hey, are you seeing any restarts happening on the pods right now? Bring that right into my container logs as a brand new column inside of there and start interacting with it without ever leaving what I'm doing. And we could go all the way upstream as well and start bringing in information about the EC2 instances or anything that is upstream of there that has some type of relation to it. So it's a really powerful way to add context and do investigations as well. Now the way that all this is really being done for the most part is via our data apps. So as we go inside of the platform and I'll show you around inside of there here in just a moment is that in the data apps, what this is going to be is not only you're going to see these data sets and dashboards and things like that and I, matter of fact, out of the box alerts and monitor stuff like that, but also inside of there, it contains the shipping mechanisms to get the data in as well. And we've aligned with open source collectors across the board to be able to do this. So for your AWS environment, it's largely going to be scraping the environment, pushing things out via Lambda functions. But if you're hosting something on prem and it's more, and that type of focus, you can really use any open source and collector that you want. We've embedded our kind of own preferences inside of our apps and you don't have to do anything because at the end of the day, a lot of my customers aren't open source collector experts, but we are. So we've embedded the scrapers. We've embedded those agents right inside these apps and all of the scripts and things like that to get these things deployed. It's embedded right inside these. So very easy to get up and running and fuel all of this content inside of here. So for some very powerful stuff. But the reason we're here today is to talk about thread intel. So inside of my environment, as we, as we dive inside of there, you'll be able to see how I'm leveraging the open source thread intel app that we've embedded. But I just want to take a moment here to discuss a little bit about open source thread intel. So essentially what is open source thread intel? And it's exactly what it sounds like. So open source thread intel is a collection of openly available feeds on the internet. So think of just a community of people out there. Maybe they're just, you know, openly going to collect. It could be things like domain names or IP addresses or whatever. And they're taking their knowledge and what they're learning and they're putting it out into the community for those people who can consume those and be able to leverage them. So here's some of the things that you would expect to see in open source thread intel. Things like maybe a table of IP addresses or domain names or even process hashes and things like that. So there's a lot of, you know, really cool benefits that you can get from aligning with an open source thread intel collection. One of the, let's go ahead and dive in. So basically who uses it? Really everybody, right? We're using security teams use it compliance team DevOps SREs and companies of all sizes. Even the bad guys use it as well. So there's no real secrets inside of here. This is all openly available data. So just kind of FYI of that as you start to maybe leverage some of these open source thread intel feeds. If you even have a program of your own or if you're leveraging the app inside of here. Except no real secrets. You know, these things are out there. But that's just one thing just to kind of keep in mind. There is a lot of good context that comes with open source thread intel, but just kind of FYI. It's out there for everybody to use. So some of the pros that you get with open source thread intel. It's free. That's a big one, right? You don't have to pay for this. So as you, you know, maybe go and grab some of these feeds and you're bringing it in. You don't have to worry too much about the cost. If you're building your own threat intelligence platform or collection, some of the things that can kind of become cumbersome is that a lot of times there's duplication. You don't meet might see an IP or something like that on several different lists. So consolidating them down, curating the feeds, things like that. So there is some effort that goes into that. One thing that's nice about our app is we've done all that for you. So you don't have to worry about that. And then it also provides you context into your tax service and investigations. And I'm going to show you what this looks like inside of the app. But just kind of FYI, like if I can go and take a look at thread intel coming inside of my environment. And I can see it on some of my external facing items where, you know, people might be probing my environment to see how they might get in. This gives me an idea of what does it look like? What are the, you know, what kind of ports and what things are people hitting to go explore my environment to try and get in or maybe find type of a vulnerability? This gives you really good insight into that. So maybe if I find something that's a hit on there, I might want to use that to go maybe wrap additional controls and visibility around and just really could invite it providing you that insight. So I think that's all I really wanted to talk about from a context perspective and what we're going to be doing today with that. Let's go ahead and dive into the environment and take a look around. So this is the observed platform. And really where I want to start right here is going into applications because this is really where a lot of that starts from. So as we dive in, you can see I have a few apps already installed inside. If you have my host monitoring app, this is really useful from just really down to the server level type of information. I was already talking about like hosting Kubernetes on EC2, and this is for example, so if I wanted to go get all of different type of metrics and logs and even kind of the state of a machine as well, like, hey, what at this given time? What was the memory and CPU usage and, you know, who was logged on and what connections were established? All of that information could be scraped with our host monitoring app. This can be ran on Windows, machines, Linux, machines alike. So really powerful stuff and being able to get all the way down to the host level. I'm also running Kubernetes inside of my environment. Matter of fact, I am running it on just kind of like bare metal inside of a around on some VMs inside of my environment. So what you're going to see is in that data set graph that I was showing you and talking about before how those links happen. As I go and deploy the Kubernetes app, it's going to be able to be aware and says, hey, I see that you also have the host monitoring app installed. And it's going to make those links for me. So as I start looking at container logs and maybe things about pods, for example, inside of there, I'm going to be able to go all the way back to the host level and really understand what did CPU look like on the host, for example, or maybe what did disk utilization look like on there? So you're going to be able to very quickly do those things through the data set graph and have those links already established. I'm also just bringing in like a usage report, just kind of like, hey, you know, how do I leverage the observe platform? I'm also running a security on in my environment, mainly for leveraging Zeke. So I have that kind of looking at my East West traffic inside my environment. I also have a tap on my external facing firewall as well. So you're going to see a lot of that as we start to dive in. So I have a lot of things getting crossed across my security onion. There's already some thread until embedded inside of there as well. So I'll be able to tap into that on top of the thread until app that I'm leveraging, which in order to install these apps is very, very easy. So these are all apps that I've installed already, but do install brand new app, for example, I can come up here and click on install new, click on install, and the apps done. That's really it. And as I did these as well, it kind of walks you through, hey, you know, how do I deploy this app and how do I get all the collectors working to scrape that data? It's all embedded inside of these. But for my thread intel app, I'm going to come up here and click manage. And what that's going to do is it takes me and shows you all the out of the box content that's included inside of this app as well. We have all of our different versions as we start to update these. But right here, the important part is connections. So you can see all the different connections that we can establish down here to different thread intel and public IP ranges from some, some infrastructure service providers. So really, this is a collection of about 17 different providers ranging from process hashes to public facing IP ranges inside of infrastructure to the actual thread intel feeds themselves. And really to kind of get started with this is that I've already deployed the app. You've seen that. So for example, let's say that I'm deploying infrastructure inside of Azure, US, I can come over here and click on get started, hit create, and my job is done. That's really about it. So what you're going to see happen is you come over here and you find things of interest to you. So for maybe for example, emerging threats or Kyoto, as I go and click these and I get started, you can see down here at the bottom, it says here are your existing connections. So here's all of the things that I've already established inside of my environment and my job is done very easy to leverage this and start getting these data in. And you can even see inside of here, we even have one to pull in custom thread data as well. We have your own feed inside of your environment, we can start leveraging that as well. So very, very easy to get up and running with this now interacting with this data. What you're going to see right here is if I come into our data sets now data sets, remember all those little dots that we created, just kind of all the different links from the big streaming data that's coming inside of my environment. But I'm going to come up here in the top. There's going to just say package equals threat intel. And here's all of that content that's being created. You're going to get account of how many entries are in each one of these data sets inside of here, basically what's the status is healthy. So just come to the top level metrics about any one of these. But as you go and interact with any one of these, what's this go take a mega you look at emerging threats block IP list. As you open these up, you're just going to do is it's going to take you to a tab called resources. And inside of here, what you're taking a look at is all of those different IPs that have come through the emerging threats block IP list. So it's very, very, you know, just kind of streamlined and very easily to access and go interact with. We can come up here and do searches across here as well if we really wanted to. But one thing that we did is if I just kind of back up here for a second, there's the Fyodor block IT, there's emerging threats. You know, there's a few threat IP list that we have inside of here. So we wanted to do was make it really easy to consume all of them at the same time. So what we've done is we've come down here and created a unified IP for threat list. So for the most part, the way that I interact with this data is I'm typically interacting with these unified lists. So if you've unified URL list, the unified IP for list and things like that. But for any reason, if you wanted to interact directly with these, you could 100% do so. Because at the end of the day, every single one of these is just become some type of a data set or materialized view in a snowflake table that we can now start linking back and forth with other things inside of here. So one of the first ways that you can start interacting with this and really kind of consuming this app is we can go to something like dashboards, for example, and right here, I'm just going to go sort on my thread intel and let's go to thread until IP address threat list search. So a couple of things that you can do with this, it's going to start you with just a blank screen right here. Maybe you're doing investigations, somebody gave you an IP or something like that, for example. And what you might want to do is I just, I'm just kind of curious, does this IP live on any type of thread intel list? So I'm going to come inside of here to do, we just go drop in maybe an IP, for example, and hit apply. And what that's going to do is it's going to go look at all those thread intel feeds and this IP that I just put in, let me know. Yeah, we see that IP, in matter of fact, it lives on two different thread intel lists. It lives on the Fyodor list and the emerging threat list as well. We can see that the categories related to peekabot and then for the emerging threats, it's basically on the block list there. So that's just one very simple way that you're going to be able to take maybe just an IP, just gather some context about what's going on with that IP and things like that. And then very similar as well, infrastructure as a service. So if this IP did live inside of Azure or AWS and I've configured those P or GCP, for example, it's going to let me know everything down here under the IAS information tab, things about that IP and which cloud vendor that it relates to. So once again, just adding context to an investigation, is this something that lives inside of, you know, one of the public clouds out there, this one happens to live inside of my environment. So just you're really kind of helping you out along those lines. The other way that you can interact with this data set, and this is one that I actually do quite a bit, is I'm actually going to go into our log explorer right now. And so just think of log explorer as just the way that all the different things that are coming inside of my environment. You saw that data stream, you know, coming in and we're splitting off and creating all those data sets. All of those data sets are going to live right here inside of your log explorer so that I could start immediately going interacting with my firewall logs or my Windows logs or metrics or traces. So just a really nice way that you can quickly go interact with those. So as you see right here, I have a PF sense firewall inside of my environment. So I actually don't have any thread until configured on my PF sense. Now there is some of that that you can add inside of there. It does put weight on the firewall as well. I kind of chose to streamline it and keep it running just kind of optimal and not do any of that. But that doesn't mean that I don't want to run that against some type of thread intel. So I'm going to leverage observe to do that for me. And then so one of the things I can start taking a look at it, I see my source IPs, I see you have desk IPs inside of here. So a lot of good info. But what I want to do is I want to go add some context to these. And one of the ways that we can do that is coming up to actions and going into a worksheet. Now what a worksheet is for observe, it's a bit of a playground. This is where I can start adding in contextual information, start linking other things inside of there. I can go publish this. I can create a URL right here so I can go share this with other people and show them maybe investigative workflows that I've been doing or just any particular things of interest. So it's a really nice way that we can just start taking things to the next level. And what I want to do is I want to go see is my environment sending any data. Am I interacting externally with anything that lives on any of my thread intel lists? So what I'm going to do is I'm going to come right over here to my destination IP addresses because I see out of my source IP and I know this is my public facing IP right here. So I'm going to go take a look at this desk IP and I'm going to go ask it to link to another data set. So what I'm doing right now is I'm going to go interact with this data set graph over here and I'm going to go create a brand new link inside of this data set graph and go and go ask a questions and bring back some information. So let's go into the data set graph. Let's go view more. And what I'm going to do is I have a full list of all of the thread intel hits inside of here. So it's asking me right now over here on the right. It's just a saying which field do you want to use to establish that link into the data set graph. So I'm just going to say, Hey, what's going to bring back my desk IP and what does call this something like tip look up, for example, and then we'll just say apply. And what that's going to do for us is now as I scroll over, it's turned green. So I know that it's established a link into my data set graph over here and now those two things are linked inside of there. So I'm going to go ask it to do his go bring me back fields of interest. So I'm going to come over here and say ad related field and I'm going to say, Oh, okay, great. I'm going to now link to my thread intelligence look up chart. And I'm just going to say anything that has maybe a source because I know all those come from some source. I'm going to say if it has a source, bring me that information back, I'm going to hit apply. And what that does is right inside my PF sense firewall logs, it created a brand new column that never existed before. And as I scroll over here, I can see I have that new look up tip source field. And this is blank. Because for the most part, the data that is going outbound for my environment doesn't live on the thread intel list. And that's very good. Right. But I am kind of curious, are we interacting with anything that might live on the thread intel list? So what I'm going to do right here is I'm going to tell it, Hey, remove any of these cells that don't have anything. So remove empty cells. Let's just go look take a look in the past 15 minutes. Awesome. No hits in there. Exactly what I was expecting. Let's rewind the clock a little bit. Let's just say in the past 24 hours and see if there's any type of hits. And so this is going to scan all my firewall traffic. This is essentially leading outbound. And I do. So I had two hits almost at the exact same time this morning at a 6.04. And as I start to scroll over here, I can see that there was a thread intel hit on the Kyoto list. And this was the matching IP that was on that list. So this is something that actually is pretty useful to me where I can now come over here. And I can say, let's go take this table. And I can modify this a little bit further if I wanted to. Maybe I like it just the way it is. And this is helpful. I can say right here, let's go create a brand new dashboard. Or let's go add this to an existing dashboard that we already have inside of here. So a lot of really cool things that we can do from a visualization perspective. Just by, hey, I was able to narrow down on something that's a thread intel hit. Go put it on a brand new dashboard that I just created. We can take this a little bit further. I could say, let's go visualize this. And let's go maybe say, I want to go take a look at the source IP by the desk IP. And I want to do a drive that brand new field, the source as well. And let's turn that into a bar chart and apply. And over the past 24 hours. And let's go see what something like that would look like. And awesome. This is actually what I was expecting. So right now it says I have one section. They happen. There was two hits that happened at the exact same time from my public facing IP address to that desk IP. And it was on the Kyoto hit list. And I could once again come over here and say, let's go add that to that dashboard that we just created. And just like that, I would have two brand new visualizations and a brand new dashboard off of firewall data that I see heading outbound that lives on thread intel lists. So just a really nice way that you can start linking some of those things together and provide some insight. But what I want to do is I want to show you how I was able to really tie this whole thing together inside of my environment, leveraging the power of observe and the way that it's able to link all the different things together. Because it doesn't really matter if it's a log of trace of metric is that it's all going into loading into our snowflake tables and we can start to create those relationships across all those materialized views is what I'm going to do is I'm going to come over to dashboards. And I'm going to go narrow down on my thread intel overview dashboard. And let's go ahead and load that up here. And so in the past seven days. So I'm going to load seven days worth of data inside of this dashboard. And what what I kind of started out doing is exactly what I was just showing you as I said, take my outbound firewall traffic coming from my pf sense show me if there's any hits, give me the source and then I also linked into my show didn't account as well. Because I'm always about context. I want to have additional context what I'm looking at. I can never have enough information sometimes. So basically I'm saying, okay, I'm seeing that these hits happen. These were the destination IP addresses. And if you notice inside of my firewall data, it was giving me my public IP, my public facing IP address. So in here in just a second, I'm going to show you what I'm doing with that and how I'm able to get down a little bit further into the weeds with that. But for what I did right here is I basically said, hey, if you ever see an IP right here, just go drop in the IP at the end of this query. So I can come in here and double click on this. It'll take me to show in and it'll brought drop in that IP. And now I have some additional context about where my environment is interacting with. So some nice stuff that I'll be able to leverage here for additional context inside of here as well. And then over here in the middle, I basically just saying in the last seven days, how many total connections have I hit. So just kind of a nice top level metric. But this is where on the next step, I'm leveraging my ZEEK traffic or my bro traffic inside of my environment because it's taking a look at that East West traffic happening inside of my environment as well as I had to tap into my firewall. So I can take a look what's happening East West and North and South inside my environment. And I went and told it, I was like, just go grab that IP address from a destination perspective. Drop it inside of my bro logs or my ZEEK traffic or my ZEEK logs inside of here. And then go bring me back the source IP of where you're seeing that traffic come from. So now I can go take a look and me expand this out just a little bit so that 127 connection that I just saw a second ago. I went back and it's able to tell me it's like, oh, that came from 196 or 1 and 2682.83. And so now I'm all to get me able to get back to the original source IP of where that traffic came from. Also my PSense firewall is my DHCP provider as well inside of my particular environment. Really could be anything for the rest of you. But what I did is I created a DHCP lookup table that's automatically grabbing the host information and its IP at any given time and able to go do a lookup and it's telling me not only the IP, but I have the host name as well. So I know that's my security box inside of my environment. Here's the source IP. I also have some static hosts, so my domain controller is static inside of here. So I also have that information in case I see any hits on that as well. So I was able to take something that went external had no context whatsoever. I was able to bring back that context of not only the source IP, but the host that it was launched from. And I know that I also have some Windows data inside of my environment. And one thing that I traditionally maybe not been able to log so much of is like the firewall connections from the Windows firewall itself. So the event ID 51 56s because they're really noisy and they create a lot of kind of chatter out there inside the environment. But since we're so cost effective, that's one of the things I've been able to onboard now. So what I did once again as I said, okay, now I have a host and I have a desk IP, go take those values and run it across my Windows logs, bring me back my event ID 51 56s that have correlated across these and give me the process that launched the connection of where these connections are being established to. So I could see on that security box, PowerShell was being leveraged to go launch that network connection. And I can see Chrome was to use a couple times Firefox is being used and PowerShell is being used twice. So some really powerful things being able to done from just observe as a platform, but all leading all the way just from a basic thread Intel, leveraging open source thread Intel, leading all the way down to the core machine that launched it and the process itself that launched a network connection. So some pretty cool stuff that we're able to do with something like this. So I created a couple sections inside of here. This one is my outbound tip connections. I'm going to go ahead and close this because that's kind of what I'm doing from an outbound perspective. Now what I'm doing from an inbound perspective is that all of this traffic is actually being blocked by my firewall. Nothing that's actually on the threat intelligence list is making it through dirt on by my last investigation anyway. But if you had something that was open to the internet, Bash and Host or things like that, that might be maybe not behind a firewall being blocked by thread Intel, you can, you know, bring some really interesting insights. And even for my environment, even though this traffic's being blocked, I made a take a look at how my environment is being impacted. So I can see a lot of hits being happened to 80, 80, 8443 inside of here. So people probing to my hosting web servers, am I hosting a website inside of here and things like that. So these might be some things that I'm on. If I was hosting a web server, if I was hosting a website, I might want to take additional controls on those, go maybe lock it down a little bit, maybe investigate the access logs, a little bit closer on there and the connections that are being established. So there's some really nice context where I could take a look at these things and say, hey, you know, how is it that they're trying to access my environment? How are they probing my environment? As I scroll through here a little bit, I see some 3389 inside of here. So they're looking for RDP servers from my environment, some 23 looking for open telnet. So some really nice insights on a trending basis of basically how are people trying to access my environment externally? And then basically taking a look here at, you know, where does this thread intel live inside of my environment? Is it a block list, malware download, so the spam house dropped traffic and then basically the top providers. So that's how I'm leveraging the thread intel app inside of my environment and really the power of being able to bring that inside of the observed platform and some of the really cool things you can do. So I hope that was helpful and now I want to leave some time for some questions. Appreciate it. Thank you. Thank you, Keith, for the compelling demo and presentation. Feel free to type your questions in everyone in the audience and I'm taking a look there or have already been some questions that have come in. The first one is, can I bring my own thread intel? Yeah, yeah, absolutely. In the thread intel app, there was a section under connections and inside of there, there was a link that says go create your own custom connection inside of there. So that's one of the ways that you can do it and you can reuse that multiple times. So if you have other feeds like it's more than just one, you can reuse that one multiple times to create additional connections. So that's one method that you can use. Then you can always basically send it in as a data source as well. So if you have something that you're already bringing it in, maybe it's like a CSV file or something along those lines, you can always just hit it into our environment using a collector or even pushing straight to our HTTP endpoint as well. So yeah, a couple of ways to do that. Excellent. Thank you Keith. The next question I see here is, do you have a list of current providers that are included in your thread intel feed? Yeah, absolutely. Yeah, you can find that on our documentation page. We'll see if we can get a link posted to that inside of here. But yeah, it'll list essentially how to use the app, all the current thread intel providers inside of there as well. So yeah, there's a pretty good list of content in there. Excellent. We'll give it just another minute here to see if any other questions come in. If not, our next webinar will be scaling observability, managing petabyte volumes of data in real time. This webinar will be on January 18th, 2024 at 10 a.m. Also keep an eye out for our new state of security observability report. And if anybody has any additional questions, you can respond to that follow-up email. And this concludes our webinar and I'd like to thank everyone for joining us today. Thank you. Thanks. Thanks, Keith.