 In Hubble, observe scaled its core engine in data loading, query performance, and a data management to meet the enterprise requirements of today and tomorrow. First, data loading. Observe already loads hundreds of terabytes data a day for production users. To plan for their future expansion, we have added parallel inserts and time-partition tables to scale to over one petabyte a day. With Hubble, we are also introducing live mode, which helps incidents on core immediately see the effect of a fix. We added this feature with an off-switches for each log and metric data stream. The production data freshness is now down to 20 seconds, or less. Our next update will take the number further down to below 5 seconds. Second, query performance. Hubble has added search indexes to speed up needle in haystack searches. Query set in the past took minutes. Now take a few seconds. In addition, the OPPO language have been expanded to include a new text search syntax for predicates and references to contactual data. Trend aligns and the field distribution of logs often point to the next investigation steps. We call these stats. Hubble's sampling technology makes stats queries an order of magnitude more efficient, which makes it easier to perform analytics on large data volumes. When serious incidents happen, hundreds of engineer-creel logs nonstop at the same time. Many exist in two or fails this challenge. To solve this problem, Hubble supports more than 2,000 concurrent users. Furthermore, the engine dynamically utilized snowflake warehouse up to 6xl in total 512 machines in size as appropriate, third, data management, and price cloud environments are becoming more complex. In order to handle this, Hubble also adds fine-grand user access control, multi-side fail-safe, and settings to manage freshness of the data. We have seen many enterprise adopt a data lake strategy for low-cost long-term storage. We believe that observability data should be integrity part of it. To support this, Hubble enables data to be both directly loaded from parkway format files in a data lake and for enriched data to be shared back to data lake without copying. I'm very proud of the Hubble release. It is our largest and most impactful release to date and is now ready for prime time in supporting the most demanding workloads.